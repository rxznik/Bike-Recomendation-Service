name: WEBIKE Recomendation CICD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  packages: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run security scanning
        uses: anchore/scan-action@v6
        with:
          severity-cutoff: high

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Set up Golang
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Install dependencies
        run: |
          go mod download

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.23.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose version

      - name: Create .env file
        run: |
          echo "CONFIG_PATH=${{ secrets.CONFIG_PATH }}" > .env
          echo "RABBITMQ_HOST=${{ secrets.RABBITMQ_HOST }}" >> .env
          echo "RABBITMQ_PORT=${{ secrets.RABBITMQ_PORT }}" >> .env
          echo "RABBITMQ_USER=${{ secrets.RABBITMQ_USER }}" >> .env
          echo "RABBITMQ_PASSWORD=${{ secrets.RABBITMQ_PASSWORD }}" >> .env
          echo "GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}" >> .env

      - name: Run tests
        run: |
          go test -v ./internal/...
      
      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          file: ./build/app/Dockerfile
          load: true
          tags: recomendation-service:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/recomendation-service
      - name: Login to GitHub Container Registry
        if: github.ref == 'refs/heads/main' && success()
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}


      - name: Build and push Docker image
        if: github.ref == 'refs/heads/main' && success()
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./build/app/Dockerfile
          push: true
          tags: |
            ghcr.io/devprod-tech/recomendation-service:latest
            ghcr.io/devprod-tech/recomendation-service:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          labels: ${{ steps.meta.outputs.labels }}

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  deploy:
    runs-on: self-hosted
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [ build ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Create .env file
        run: |
          echo "CONFIG_PATH=${{ secrets.CONFIG_PATH }}" > .env
          echo "RABBITMQ_HOST=${{ secrets.RABBITMQ_HOST }}" >> .env
          echo "RABBITMQ_PORT=${{ secrets.RABBITMQ_PORT }}" >> .env
          echo "RABBITMQ_USER=${{ secrets.RABBITMQ_USER }}" >> .env
          echo "RABBITMQ_PASSWORD=${{ secrets.RABBITMQ_PASSWORD }}" >> .env
          echo "GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}" >> .env
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Update docker-compose.yml to use GitHub Container Registry
        run: |
          sed -i 's|image: recomendation-service|image: ghcr.io/devprod-tech/recomendation-service:latest|g' docker-compose.yml

      - name: Pull latest images
        run: |
          docker compose -p recomendation-service-dev pull

      - name: Deploy with docker-compose
        run: |
          docker network create custom_net || true
          docker compose -p recomendation-service-dev up -d --remove-orphans --force-recreate

      - name: Verify deployment
        run: |
          sleep 10
          docker compose -p recomendation-service-dev ps
