// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import (
	models "github.com/devprod-tech/webike_recomendations-Vitalya/internal/models"
	mock "github.com/stretchr/testify/mock"
)

// ParsingParseAdapter is an autogenerated mock type for the ParsingParseAdapter type
type ParsingParseAdapter struct {
	mock.Mock
}

// GetRelevantProduct provides a mock function with given fields: detail
func (_m *ParsingParseAdapter) GetRelevantProduct(detail string) *models.ParsingParseResponse {
	ret := _m.Called(detail)

	if len(ret) == 0 {
		panic("no return value specified for GetRelevantProduct")
	}

	var r0 *models.ParsingParseResponse
	if rf, ok := ret.Get(0).(func(string) *models.ParsingParseResponse); ok {
		r0 = rf(detail)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.ParsingParseResponse)
		}
	}

	return r0
}

// NewParsingParseAdapter creates a new instance of ParsingParseAdapter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewParsingParseAdapter(t interface {
	mock.TestingT
	Cleanup(func())
}) *ParsingParseAdapter {
	mock := &ParsingParseAdapter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
