// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import (
	models "github.com/devprod-tech/webike_recomendations-Vitalya/internal/models"
	mock "github.com/stretchr/testify/mock"
)

// GeoAPIAdapter is an autogenerated mock type for the GeoAPIAdapter type
type GeoAPIAdapter struct {
	mock.Mock
}

// GetNearestTO provides a mock function with given fields: longitude, latitude
func (_m *GeoAPIAdapter) GetNearestTO(longitude float64, latitude float64) *models.GeoAPIResponse {
	ret := _m.Called(longitude, latitude)

	if len(ret) == 0 {
		panic("no return value specified for GetNearestTO")
	}

	var r0 *models.GeoAPIResponse
	if rf, ok := ret.Get(0).(func(float64, float64) *models.GeoAPIResponse); ok {
		r0 = rf(longitude, latitude)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.GeoAPIResponse)
		}
	}

	return r0
}

// NewGeoAPIAdapter creates a new instance of GeoAPIAdapter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewGeoAPIAdapter(t interface {
	mock.TestingT
	Cleanup(func())
}) *GeoAPIAdapter {
	mock := &GeoAPIAdapter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
