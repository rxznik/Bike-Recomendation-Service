// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import (
	models "github.com/devprod-tech/webike_recomendations-Vitalya/internal/models"
	mock "github.com/stretchr/testify/mock"
)

// ParsingPort is an autogenerated mock type for the ParsingPort type
type ParsingPort struct {
	mock.Mock
}

// Accept provides a mock function with given fields: msg
func (_m *ParsingPort) Accept(msg models.AnalyticsMessage) models.ParsingInput {
	ret := _m.Called(msg)

	if len(ret) == 0 {
		panic("no return value specified for Accept")
	}

	var r0 models.ParsingInput
	if rf, ok := ret.Get(0).(func(models.AnalyticsMessage) models.ParsingInput); ok {
		r0 = rf(msg)
	} else {
		r0 = ret.Get(0).(models.ParsingInput)
	}

	return r0
}

// NewParsingPort creates a new instance of ParsingPort. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewParsingPort(t interface {
	mock.TestingT
	Cleanup(func())
}) *ParsingPort {
	mock := &ParsingPort{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
